pipeline {
    agent any

    environment {
        SLACK_CHANNEL = '#백엔드'
    }

    stages {
        stage('git clone') {
            steps {
                git branch: 'main', url: 'https://github.com/Tesssssssssy/HanwhaBC-be02-BackEndJenkins'
            }
        }

        stage('Build') {
            steps {
                slackSend(channel: SLACK_CHANNEL, color: '#FFFF00', message: "STARTED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
                script {
                    sh 'mvn package'
                }
            }
        }

        stage('Docker Build') {
            steps {
                script {
                    sh 'docker build --tag tessssssssy/campingontop:9.$BUILD_NUMBER .'
                }
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-credential', usernameVariable: 'dockerID', passwordVariable: 'dockerPW')]) {
                        sh "docker login -u ${dockerID} -p ${dockerPW}"
                        sh 'docker push tessssssssy/campingontop:9.$BUILD_NUMBER'
                    }
                }
            }
        }

        stage('SSH transfer') {
            steps {
                sshPublisher(
                    continueOnError: false, 
                    failOnError: true,
                    publishers: [
                        sshPublisherDesc(
                            configName: "CampingontopMaster",
                            verbose: true,
                            transfers: [
                                sshTransfer(
                                    sourceFiles: "backend-deployment.yml",
                                    remoteDirectory: "/root/",
                                    execCommand: '''
                                        sed -i "s/VERSION/$BUILD_ID/g" /root/backend-deployment.yml
                                        kubectl apply -f /root/backend-deployment.yml
                                    '''
                                )
                            ]
                        )
                    ]
                )
            }
        }
    }

    post {
        success {
            slackSend(channel: SLACK_CHANNEL, color: '#00FF00', message: "SUCCESSFUL: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
        failure {
            slackSend(channel: SLACK_CHANNEL, color: '#FF0000', message: "FAILED: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}
